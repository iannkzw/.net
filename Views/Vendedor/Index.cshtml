@model PaginatedList<CRUD.Models.Vendedor>

@{
    ViewData["Title"] = "Index";
}

<h3 class="text-secondary text-center" style="padding:20px 0px 20px 0px;" >Listagem de representantes</h3>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Nome  ou E-mail" />
            <input type="submit" value="Pesquisar" class="btn btn-sm btn-primary" />
            <a class="btn btn-sm btn-outline-secondary" asp-action="Index">Voltar</a>
        </p>
    </div>
</form>

<table class="table mt-4">
    <thead>
        <tr>
            <th>
                <a class="btn btn-sm btn-outline-info" asp-action="Index" asp-route-sortOrder="@ViewData["NomeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Nome</a>
            </th>
            <th>
                <a class="btn btn-sm btn-outline-info" asp-action="Index" asp-route-sortOrder="@ViewData["EmailSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">E-mail</a>
            </th>
            <th>
                <a class="btn btn-sm btn-outline-info" href="#">Telefone</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Telefone)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id"><i class="fa fa-edit" aria-hidden="true"></i></a> 
                    <a asp-action="Details" asp-route-id="@item.Id"><i class="fa fa-search-plus" aria-hidden="true"></i></a>
                    <a asp-action="Delete" asp-route-id="@item.Id"><i class="fa fa-times-circle" aria-hidden="true"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Voltar
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Proximo
</a>


<p class="text-center">
    <a class="btn btn-success" asp-action="Create">Cadastrar vendedor</a>
</p>